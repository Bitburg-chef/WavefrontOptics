function [lpsf, mpsf, spsf, arcminperpix, polypsf, strehl, sceFrac] = ...    ComputeLMSPSFFromZernike(wls,T_cones,spd_weight,zcoeffs,measpupilMM,calcpupilMM,nominalFocusWl,defocusDiopters,sizeOfFieldPixels,sizeOfFieldMM,sceParams)% [lpsf, mpsf, spsf, arcminperpix, polypsf, strehl, sceFrac] = ...%   ComputeLMSPSFFromZernike(wls,T_cones,spd_weight,zcoeffs,measpupilMM,calcpupilMM,nominalFocusWl,defocusDiopters,sizeOfFieldPixels,sizeOfFieldMM,sceParams)%% This routine finds PSFs seen by each cone class under passed spectrum spd_weight.%% Inputs - see comment in ComputePupilFunctionFromZernike for more details.%   wls -               Column vector of wavelengths over which to cone sensitivity and spectrum are specified.%   T_cones -           Cone spectral sensitivities in Psychtoolbox data format.%   spd_weight -        Weighting spectrum as a column vector.%   ... -               See ComputePSFFromZernike for description of remaining arguments.%% Outputs%   lpsf -              Calcuated L cone psf. %   mpsf -              Calcuated M cone psf.                    %   spsf -              Calcuated S cone psf.                    %   arcminperpix -      Arc minutes per pixel for returned psfs.%   psf -               Calcuated monochromatic psfs. Third dimension of returned matrix indexes wavelength. %   strehl -            Strehl ratio at each wavelength for psf.%   sceFrac -           Fraction of light actually absorbed when SCE is taken into account, at each wavelength.%% The returned psfs are normalized so that they sum to unity.%% See ComputePSFFromZernike.%% 7/13/07   dhb    Made into a callable function, based on code provided by Heidi Hofer.%           dhb    Remove globals, fix case of fft, get rid of some vars we don't care about%           dhb    Don't write files here, optional plot supression.% 7/14/07   dhb    Change name a little.% 12/22/09  dhb    Return monochromatic PSFs as a cell array% 8/21/11   dhb    Update% Handle default argsif (nargin < 11 || isempty(sceParams))    sceParams = [];end% Force wavelengths to column vector formwls = MakeItWls(wls);% Get weighted cone fundamentalssweight=T_cones(3,:).*spd_weight';mweight=T_cones(2,:).*spd_weight';lweight=T_cones(1,:).*spd_weight';% Get psfs for each cone type[psf,arcminperpix,strehl,sceFrac] = ComputePSFFromZernike(zcoeffs,measpupilMM,calcpupilMM,wls,nominalFocusWl,sizeOfFieldPixels,sizeOfFieldMM,sceParams);\lpsf = zeros(size(psf(:,:,1)));mpsf = zeros(size(psf(:,:,1)));spsf = zeros(size(psf(:,:,1)));for wl = 1:wls    lpsf = lpsf + lweight(wl)*psf(:,:,wl);     mpsf = mpsf + mweight(wl)*psf(:,:,wl);     spsf = spsf + sweight(wl)*psf(:,:,wl); end% Normalize the LMS psfs so that each has unit volumelpsf = lpsf/sum(lpsf(:));mpsf = mpsf/sum(mpsf(:));spsf = spsf/sum(spsf(:));